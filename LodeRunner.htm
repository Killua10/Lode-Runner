<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">
<head>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Lode Runner par Ariel Sashcov et Mohamed Cherifi</title>
  <link rel="stylesheet" type="text/css" href="" />
  <!-- Code JavaScript local -->
  <script type="text/javascript">
	var objCanvas = null;
	var objC2D = null;
	var objCycleAnimation = null;
	var objImageFond = null;
  var binDroite = false;
  var binGauche = false;

  var tabMappe = [ ['F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F'],
                   ['F','F','F','F','O','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F'],
                   ['M','M','M','M','M','M','M','E','M','M','M','M','M','M','M','F','F','F','F','F','F','F','F','F','F','F','F','F'],
                   ['F','F','F','F','F','F','F','E','C','C','C','C','C','C','C','C','C','C','F','F','F','F','F','O','F','F','F','F'],
                   ['F','F','F','F','F','F','F','E','F','F','F','F','M','M','E','F','F','F','M','M','M','M','M','M','M','E','M','M'],
                   ['F','F','F','F','F','F','F','E','F','F','F','F','M','M','E','F','F','F','F','F','F','F','F','F','F','E','F','F'],
                   ['F','F','F','F','F','F','F','E','F','F','F','F','M','M','E','F','F','F','F','F','F','F','O','F','F','E','F','F'],
                   ['M','M','E','M','M','M','M','M','F','F','F','F','M','M','M','M','M','M','M','M','E','M','M','M','M','M','M','M'],
                   ['F','F','E','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','E','F','F','F','F','F','F','F'],
                   ['F','F','E','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','E','F','F','F','F','F','F','F'],
                   ['M','M','M','M','M','M','M','M','M','E','M','M','M','M','M','M','M','M','M','M','E','F','F','F','F','F','F','F'],
                   ['F','F','F','F','F','F','F','F','F','E','F','F','F','F','F','F','F','F','F','F','E','F','F','F','F','F','F','F'],
                   ['F','F','F','F','F','F','F','O','F','E','C','C','C','C','C','C','C','C','C','C','E','F','F','F','O','F','F','F'],
                   ['F','F','F','F','E','M','M','M','M','M','M','F','F','F','F','F','F','F','F','F','M','M','M','M','M','M','M','E'],
                   ['F','F','F','F','E','F','F','F','F','F','F','F','F','F','F','F','F','F','O','F','F','F','F','F','F','F','F','E'],
                   ['M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M','M'],
                   ['B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B']  ];

  var tabObjMap = [[]];

    function initAnimation() {
        objCanvas = document.getElementById('monCanvas');
        objC2D = objCanvas.getContext('2d');
        initImageFond();
        initRunner();
        initOr();
        initMur();
        initCorde();
        initEchelle();
        initFond();
	      dessiner(); // Dessiner une première fois
        animer();

    }

    // Aller chercher les image de fond
    function initImageFond() {
        objImageFond = new Image();
        objImageFond.src = 'img/F.png';

				objImageEchelle = new Image();
        objImageEchelle.src = 'img/E.png';

				objImageCorde = new Image();
        objImageCorde.src = 'img/C.png';

				objImageMur = new Image();
        objImageMur.src = 'img/M.png';

				objImageOr = new Image();
        objImageOr.src = 'img/O.png';

				objImageBase = new Image();
        objImageBase.src = 'img/B.png';

    }

    // Un cycle d'animation
    function animer() {
        // Requête pour le prochain cycle
        objCycleAnimation = requestAnimationFrame(animer);
    		// Le cycle d'animation
    		effacerDessin();
    		mettreAjourAnimation();
    		dessiner();
	}

    // Arrêter l'animation
	function arreterAnimation() {
	    if (objCycleAnimation != null)
	        cancelAnimationFrame(objCycleAnimation);
	}

	// Pour effacer le dessin
	function effacerDessin() {
		objC2D.clearRect(0,0, objCanvas.width, objCanvas.height);
	}

  function initRunner(){
    var objImageDebut = new Image();
    objImageDebut.src = 'img/debut.png';
    var objImageDroit = new Image();
    objImageDroit.src = 'img/courirDroit.png';
    var objImageGauche = new Image();
    objImageGauche.src = 'img/courirGauche.png';

    objRunner = new Object();
    objRunner.objImage = objImageDebut;
    objRunner.objAnimationDroit = objImageDroit;
    objRunner.objAnimationGauche = objImageGauche;
    objRunner.intLongeur = 35;
    objRunner.intLargeur = 23;
    objRunner.intLargeur2 = 12;
    objRunner.posX = objCanvas.width/2;
    objRunner.posY = 575;
    objRunner.intVitesse = 4;
    objRunner.intDirection = 0; //-1=left, 0=middle, +1=right
    objRunner.binChute = false;
    objRunner.intFrame = 0;
    objRunner.intFrameGauche = 0;
    objRunner.intFrameDroit = 0;
  }

  function initOr(){
    objImageOr = new Image();
    objImageOr.src = 'img/O.png';
    objOr = new Object();
    objOr.objImage = objImageOr;
    objOr.intLongeur = 40;
    objOr.intLargeur = 40;
    objOr.posX = 0;
    objOr.posY = 0;
    objOr.binRamasser = false;

  }

  function initMur(){
    objImageMur = new Image();
    objImageMur.src = 'img/M.png';
    objMur = new Object();
    objMur.objImage = objImageMur;
    objMur.intLongeur = 40;
    objMur.intLargeur = 40;
    objMur.posX = 0;
    objMur.posY = 0;
    objMur.binCreuser = false;
  }

  function initCorde(){
    objImageCorde = new Image();
    objImageCorde.src = 'img/C.png';
    objCorde = new Object();
    objCorde.objImage = objImageCorde;
    objCorde.intLongeur = 40;
    objCorde.intLargeur = 40;
    objCorde.posX = 0;
    objCorde.posY = 0;
    objCorde.binSurCorde = false;
  }

  function initEchelle(){
    objImageEchelle = new Image();
    objImageEchelle.src = 'img/C.png';
    objEchelle = new Object();
    objEchelle.objImage = objImageEchelle;
    objEchelle.intLongeur = 40;
    objEchelle.intLargeur = 40;
    objEchelle.posX = 0;
    objEchelle.posY = 0;
    objEchelle.binSurEchelle = false;
  }

  function initFond(){
    objImageFond = new Image();
    objImageFond.src = 'img/C.png';
    objFond = new Object();
    objFond.objImage = objImageFond;
    objFond.intLongeur = 40;
    objFond.intLargeur = 40;
    objFond.posX = 0;
    objFond.posY = 0;
  }



	// Pour mettre à jour l'animation
	function mettreAjourAnimation(){

    animationRunner();


	}

  function animationRunner(){
    // (FRAME) Animation pour le Runner

    if (objRunner.intDirection == 0) {
      objRunner.intFrame+=0.05;
      if (objRunner.intFrame >= 22) {
        objRunner.intFrame = 0;
      }
    }
    if (objRunner.intDirection == -1) {
      objRunner.intFrameGauche+=1;
      if (objRunner.intFrameGauche >= 27) {
        objRunner.intFrameGauche = 0;
      }
    }
    if (objRunner.intDirection == 1) {
      objRunner.intFrameDroit+=1;
      if (objRunner.intFrameDroit >= 22) {
        objRunner.intFrameDroit = 0;
      }
    }


    if (objRunner.posX < objRunner.intLargeur - objRunner.intLargeur2) {
      objRunner.posX = objRunner.intLargeur;
      objRunner.posX = objRunner.posX-objRunner.intLargeur2;
    }

    if (objRunner.posX > (objCanvas.width - objRunner.intLargeur) + objRunner.intLargeur2) {
      objRunner.posX = objCanvas.width - objRunner.intLargeur;
      objRunner.posX = objRunner.posX+objRunner.intLargeur2;
    }

    if (binDroite) {
      objRunner.intDirection = 1;
      objRunner.posX += objRunner.intVitesse;

    }

    if (binGauche) {
      objRunner.intDirection = -1;
      objRunner.posX -= objRunner.intVitesse;

    }
  }

  function dessinerRunner(x, y, intFrame){
    //objC2D.drawImage(objImageDebut, 25*step, 0, posX-12, posY-12, 0, 0, 35, 35);
    if (objRunner.intDirection == 0) {
      objC2D.drawImage(objRunner.objImage, (objRunner.objImage.width/22)*intFrame, 0, 23, 35, objRunner.posX-12, objRunner.posY-12, 23, 35);
    }else if (objRunner.intDirection == -1) {
      objC2D.drawImage(objRunner.objAnimationGauche, (objRunner.objAnimationGauche.width/27)*intFrame, 0, 23, 35, objRunner.posX-12, objRunner.posY-12, 23, 35);
    }else if (objRunner.intDirection == 1) {
      objC2D.drawImage(objRunner.objAnimationDroit, (objRunner.objAnimationDroit.width/27)*intFrame, 0, 23, 35, objRunner.posX-12, objRunner.posY-12, 23, 35);
    }

  }


	// Pour dessiner
	function dessiner() {
	    dessinerMappe();
      if (objRunner.intDirection == 0) {
        dessinerRunner(objRunner.posX, objRunner.posY, Math.floor(objRunner.intFrame));
      }else if (objRunner.intDirection == -1) {
        dessinerRunner(objRunner.posX, objRunner.posY, Math.floor(objRunner.intFrameGauche));
      }else if (objRunner.intDirection == 1) {
        dessinerRunner(objRunner.posX, objRunner.posY, Math.floor(objRunner.intFrameDroit));
      }

      debug();


	}

  function debug(){
    objC2D.font="20px calibri";
    objC2D.fillStyle = 'gray';
    objC2D.fillText("posX: " + objRunner.posX + " - posY: " + objRunner.posY + " - frame: " + objRunner.intFrame.toFixed(2) + " - direction: " + objRunner.intDirection,10,670);

  }

	// Pour dessiner l'image de fond
	function dessinerMappe() {
	    objC2D.save();  // Sauvegarde le contexte
      var intTailleTuile = 40;
			var intTuileX = intTailleTuile;
      var intTuileY = intTailleTuile;

      for (var row = 0; row < tabMappe.length; row++) {
        for (var col = 0; col < tabMappe[row].length; col++) {
          intTuileX = col * intTailleTuile;
					intTuileY = row * intTailleTuile;

          switch (tabMappe[row][col]) {
            case 'F': objC2D.drawImage(objImageFond, intTuileX, intTuileY, 40, 40);
            tabObjMap[row][col] = objFond;
              break;

            case 'E': objC2D.drawImage(objImageEchelle, intTuileX, intTuileY, 40, 40);
              break;

            case 'C': objC2D.drawImage(objImageCorde, intTuileX, intTuileY, 40, 40);
              break;

            case 'M': objC2D.drawImage(objImageMur, intTuileX, intTuileY, 40, 40);
              break;

            case 'O': objC2D.drawImage(objImageOr, intTuileX, intTuileY, 40, 40);
              break;

            case 'B': objC2D.drawImage(objImageBase, intTuileX, intTuileY, 40, 40);
              break;
          }
        }
      }
	    objC2D.restore(); // Restaure le contexte
	}

  function keyDown(){
    var x = event.keyCode;

    // Deplacement droite
    if (x == 39)  binDroite = true;
    // Deplacement gauche
    if (x == 37)  binGauche = true;

  }

  function keyUp(){
    var x = event.keyCode;

    // Deplacement droite
    if (x == 39){
      binDroite = false;
      objRunner.intDirection = 0;
    }
    // Deplacement gauche
    if (x == 37){
      binGauche = false;
      objRunner.intDirection = 0;
    }

  }

   </script>
</head>

<body onload="initAnimation()">
	<canvas id="monCanvas" tabindex="1" width="1120" height="680" style="display: block; margin: auto;" onkeydown="keyDown()" onkeyup="keyUp()">
		Votre navigateur ne supporte pas la balise canvas
	</canvas
</body>

</html>
